<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlh.mybatis.dao.EmployeeMapper">

    <!--
        cache标签:二级缓存
            1.eviction:缓存回收策略
                1).LRU:最近最少使用,移除最长时间不使用的对象(默认)
                2).FIFO:先进先出,按对象进入缓存的顺序来移除它们
                3).SOFT:软引用,移除基于垃圾回收器状态和软引用规则的对象
                4).WEAK:弱引用,更积极的移除基于垃圾回收器和弱引用规则的对象
            2.flushInterval:缓存刷新间隔,默认不请空,可以设置一个毫秒值
            3.readOnly:是否只读
                1).true:只读,mybatis认为所有从缓存中获取的操作都是只读操作,不会修改数据,
                        mybatis为了加快获取速度,直接会将缓存中的引用交给用户,不安全但速度快
                2).false:非只读,mybatis觉得获取的数据会被改动(默认)
                         利用序列化与反序列化的技术克隆一个新的数据,安全但是速度慢
            4.size:缓存多少个元素
            5.type:自定义缓存的全类名(实现Cache接口)
    -->
    <cache/>
    <select id="getEmpById" resultType="com.zlh.mybatis.bean.Employee">
        select * from t_employee where id = #{id}
    </select>
</mapper>