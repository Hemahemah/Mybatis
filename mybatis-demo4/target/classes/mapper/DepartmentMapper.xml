<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlh.mybatis.bean.DepartmentMapper">
    <select id="getDeptById" resultType="com.zlh.mybatis.bean.Department">
        select id,dept_name departmentName from t_dept where id = #{id}
    </select>

    <!--
        场景2
        collection标签:定义集合类型属性
            ofType:指定集合里元素的类型
            在集合里定义元素的封装规则
    -->
    <resultMap id="MyDept" type="com.zlh.mybatis.bean.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <collection property="employees" ofType="com.zlh.mybatis.bean.Employee">
            <!--在集合里定义元素的封装规则-->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email"  property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <select id="getDeptByIdPlus" resultMap="MyDept">
        select d.id did,d.dept_name dept_name,e.id eid,e.last_name last_name,e.email email,e.gender gender
        from t_dept d left join t_employee e on d.id=e.d_id  where d.id = #{id}
    </select>
    <!--
        分步查询
        如果column需要传递多个值,把值封装在map集合中
        column="{key1=column1,key2=column2}"
        fetchType="lazy"默认延迟加载;eager为立即加载
    -->
    <resultMap id="MyDeptStep" type="com.zlh.mybatis.bean.Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <collection property="employees" select="com.zlh.mybatis.bean.EmployeePlusMapper.getEmpsByDeptId" column="{deptId=id}"/>
    </resultMap>
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select * from t_dept where id = #{id}
    </select>
</mapper>